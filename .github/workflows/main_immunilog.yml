name: Build, Analyze, and Deploy ASP.Net Core and JavaScript App to Azure Web App - Immunilog

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  analyze:
    name: Build and Analyze with SonarCloud
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Build and analyze backend with SonarCloud
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"atjulia_immunilog" /o:"atjulia" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build ./backend --configuration Release
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

  frontend-build:
    name: Build Frontend (JavaScript)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'

      - name: Install dependencies and build frontend
        working-directory: ./frontend
        run: |
          npm install
          npm run build

      - name: Upload frontend artifact for deployment
        uses: actions/upload-artifact@v4
        with:
          name: frontend
          path: ./frontend/dist

  backend-deploy:
    name: Build and Deploy Backend to Azure Web App
    runs-on: ubuntu-latest
    needs: [analyze, frontend-build]
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Build backend
        run: dotnet build ./backend --configuration Release

      - name: dotnet publish
        run: dotnet publish ./backend -c Release -o ${{env.DOTNET_ROOT}}/myapp

      - name: Upload backend artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: backend
          path: ${{env.DOTNET_ROOT}}/myapp

      - name: Download frontend artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend
          path: ./frontend-build

      - name: Download backend artifact
        uses: actions/download-artifact@v4
        with:
          name: backend

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'immunilog'
          slot-name: 'Production'
          package: ${{env.DOTNET_ROOT}}/myapp
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_F5A7102A48024BBD93897BC0B39D7DB3 }}
